Current schema for ECQ: table ec_curves with extra table

Search table columns (* indicates "used for searching Nov 2020"):

*'label'
*'lmfdb_label'
*'iso'
*'lmfdb_iso'
 'iso_nlabel'
*'number'
 'lmfdb_number'
*'ainvs'
*'jinv'
*'conductor'
*'torsion'
*'rank'
*'sha'
*'torsion_structure'
*'cm'
*'isogeny_degrees'
*'nonmax_primes'
 'nonmax_rad'
 'trace_hash'
*'bad_primes'
 'class_size'
 'num_bad_primes'
*'semistable'
 'optimality'
 'manin_constant'
*'num_int_pts'
*'regulator'
*'isodeg'
 'torsion_growth'

Extra table columns:

 'equation'
 'signD'
 'torsion_generators'
 'xcoord_integral_points'
 'gens'
 'heights'
 'tamagawa_product'
 'special_value'
 'real_period'
 'degree'
 'modp_images'
 '2adic_label'
 '2adic_index'
 '2adic_log_level'
 '2adic_gens'
 'isogeny_matrix'
 'class_deg'
 'sha_an'
 'sha_primes'
 'torsion_primes'
 'tor_degs'
 'tor_fields'
 'tor_gro'
 'local_data'
 'min_quad_twist'
 'aplist'
 'anlist'
 'iwdata'
 'iwp0'

Proposed extra columns to move into main table (small and searchable):

 'signD'
 'degree'
 'modp_images'
 'class_deg'
 'sha_primes'
 'torsion_primes'
 ?'equation'       was: string of length at most 88; will be: omitted
 ?'min_quad_twist' was: dict with keys 'disc', 'label', 'lmfdb_label'
                   will be: 2 columns 'min_quad_twist_ainvs', 'min_quad_twist_disc'

 NB1 'equation' could be made redundant using a simple custom function
 for converting ainvs.

 NB2: 'min_quad_twist' is now a dict like {'disc': 5, 'label': '11a1',
 'lmfdb_label': '11.a2'} but instead of labels we will instead store
 the disc (twisting discriminant) and ainvs of the twisted curves and
 look up the labels in the WebEC constructor.  The advantage is that
 on upload we would not need to keep track of both sets of labels.

######################################################################

New tables:

(1) ec_q_local_data:

refactor current dict with keys

['p', 'cp', 'kod', 'red', 'rootno', 'ord_cond', 'ord_disc', 'ord_den_j']

into a separate table with one row per bad prime per curve, labels+8 columns:

 'prime'
 'tamagawa_number'
 'kodaira_symbol'
 'reduction_type'
 'root_number'
 'conductor_valuation'
 'discriminant_valuation'
 'j_denominator_valuation'

 -all are int, including kodaira_symbol, which uses the pari numerical
encoding.  Sage has (thanks to David Roe) a suitable class to use to
convert these:

sage: [(n,latex(KodairaSymbol(n))) for n in (-10..10) if n]

Also, K._pari_code() converts a Sage Kodaira Symbol object K to its pari code.

(2) ec_q_torsion_growth (only exists for conductors <400k):

refactor current 3 columns for each curve:

 'tor_degs'
 'tor_fields'
 'tor_gro'

into  a separate table with one row per growth field per curve, labels+3 columns:

 'degree'   [int]
 'field'   [list of ints, coeffs of one field polynomial]
 'torsion' [list of 1 or 2 ints, e.g. [5] or [2,6]]

(3) ec_q_iwasawa (only exists for conductors <150k; raw data is in
 https://github.com/rpollack9974/Iwasawa-invariants ):
 
 'iwdata'
 'iwp0'

(4) ec_q_mwbsd:

 'torsion_generators'
 'xcoord_integral_points'
 'gens'
 'heights'
 'tamagawa_product'
 'special_value'
 'real_period'
 'sha_an'
+ (new cols to allow for incomplete rank data -- any can be None)
 'rank_bounds'
 'analytic_rank'
 'ngens'

(5) ec_q_classdata (only needed for one curve per isogeny class, so the
label column will be the isogeny class label):

 'isogeny_matrix'
 'aplist'
 'anlist'

(6) ec_2adic:

 '2adic_label'
 '2adic_index'
 '2adic_log_level'
 '2adic_gens'

Proposed changes of type, only using jsonb where necessary

@from jsonb to integer[]: xcoord_integral_points, sha_primes,
                          torsion_primes, tor_degs, aplist, anlist,
                          ainvs, torsion_structure, isogeny_degrees,
                          nonmax_primes

@from jsonb to numeric[]: heights

Columns of type jsonb after this:

gens, torsion_generators, modp_images, tor_fields (list of strings)
isogeny_matrix (list of lists of ints)
iwdata (dict)

?
2adic_gens

Columns no longer used:
tor_gro
local_data
min_quad_twist
